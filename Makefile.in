# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@





VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@HAVE_MPI_TRUE@am__append_1 = src/mpi.cpp \
@HAVE_MPI_TRUE@ src/autopicker_mpi.cpp \
@HAVE_MPI_TRUE@ src/ctffind_runner_mpi.cpp \
@HAVE_MPI_TRUE@ src/particle_polisher_mpi.cpp \
@HAVE_MPI_TRUE@ src/particle_sorter_mpi.cpp \
@HAVE_MPI_TRUE@ src/preprocessing_mpi.cpp \
@HAVE_MPI_TRUE@ src/ml_optimiser_mpi.cpp

@HAVE_MPI_TRUE@am__append_2 = src/mpi.h \
@HAVE_MPI_TRUE@ src/autopicker_mpi.h \
@HAVE_MPI_TRUE@ src/ctffind_runner_mpi.h \
@HAVE_MPI_TRUE@ src/particle_polisher_mpi.h \
@HAVE_MPI_TRUE@ src/particle_sorter_mpi.h \
@HAVE_MPI_TRUE@ src/preprocessing_mpi.h \
@HAVE_MPI_TRUE@ src/ml_optimiser_mpi.h

@HAVE_FLTK_TRUE@am__append_3 = src/displayer.cpp \
@HAVE_FLTK_TRUE@ src/gui_entries.cpp \
@HAVE_FLTK_TRUE@ src/gui_jobwindow.cpp \
@HAVE_FLTK_TRUE@ src/gui_mainwindow.cpp \
@HAVE_FLTK_TRUE@ src/manualpicker.cpp 

@HAVE_FLTK_TRUE@am__append_4 = src/displayer.h \
@HAVE_FLTK_TRUE@ src/gui_entries.h \
@HAVE_FLTK_TRUE@ src/gui_jobwindow.h \
@HAVE_FLTK_TRUE@ src/gui_mainwindow.h \
@HAVE_FLTK_TRUE@ src/manualpicker.h 

bin_PROGRAMS = project$(EXEEXT) reconstruct$(EXEEXT) refine$(EXEEXT) \
	preprocess$(EXEEXT) postprocess$(EXEEXT) autopick$(EXEEXT) \
	particle_polish$(EXEEXT) particle_sort$(EXEEXT) \
	run_ctffind$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2) \
	mask_create$(EXEEXT) stack_create$(EXEEXT) \
	image_handler$(EXEEXT) find_tiltpairs$(EXEEXT)
@HAVE_MPI_TRUE@am__append_5 = refine_mpi preprocess_mpi autopick_mpi particle_polish_mpi particle_sort_mpi run_ctffind_mpi
@HAVE_FLTK_TRUE@am__append_6 = manualpick display maingui 	
subdir = .
DIST_COMMON = INSTALL NEWS README AUTHORS ChangeLog \
	$(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) \
	$(srcdir)/config.h.in $(srcdir)/relion.pc.in \
	$(dist_bin_SCRIPTS) $(dist_noinst_SCRIPTS) depcomp \
	$(am__nobase_relion_include_HEADERS_DIST) COPYING compile \
	config.guess config.sub install-sh missing ltmain.sh
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = relion-${RELION_API_VERSION}.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(relion_includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
librelion_@RELION_API_VERSION@_la_LIBADD =
am__librelion_@RELION_API_VERSION@_la_SOURCES_DIST = src/args.cpp \
	src/assembly.cpp src/autopicker.cpp src/backprojector.cpp \
	src/complex.cpp src/ctf.cpp src/ctffind_runner.cpp \
	src/error.cpp src/euler.cpp src/exp_model.cpp src/fftw.cpp \
	src/filename.cpp src/funcs.cpp src/healpix_sampling.cpp \
	src/image.cpp src/mask.cpp src/matrix1d.cpp src/matrix2d.cpp \
	src/memory.cpp src/metadata_container.cpp \
	src/metadata_label.cpp src/metadata_table.cpp src/ml_model.cpp \
	src/ml_optimiser.cpp src/multidim_array.cpp \
	src/numerical_recipes.cpp src/parallel.cpp \
	src/particle_polisher.cpp src/particle_sorter.cpp \
	src/postprocessing.cpp src/preprocessing.cpp src/projector.cpp \
	src/strings.cpp src/symmetries.cpp src/tabfuncs.cpp \
	src/time.cpp src/transformations.cpp \
	src/Healpix_2.15a/cxxutils.cc \
	src/Healpix_2.15a/healpix_base.cc src/mpi.cpp \
	src/autopicker_mpi.cpp src/ctffind_runner_mpi.cpp \
	src/particle_polisher_mpi.cpp src/particle_sorter_mpi.cpp \
	src/preprocessing_mpi.cpp src/ml_optimiser_mpi.cpp \
	src/displayer.cpp src/gui_entries.cpp src/gui_jobwindow.cpp \
	src/gui_mainwindow.cpp src/manualpicker.cpp
am__dirstamp = $(am__leading_dot)dirstamp
@HAVE_MPI_TRUE@am__objects_1 = src/mpi.lo src/autopicker_mpi.lo \
@HAVE_MPI_TRUE@	src/ctffind_runner_mpi.lo \
@HAVE_MPI_TRUE@	src/particle_polisher_mpi.lo \
@HAVE_MPI_TRUE@	src/particle_sorter_mpi.lo \
@HAVE_MPI_TRUE@	src/preprocessing_mpi.lo \
@HAVE_MPI_TRUE@	src/ml_optimiser_mpi.lo
@HAVE_FLTK_TRUE@am__objects_2 = src/displayer.lo src/gui_entries.lo \
@HAVE_FLTK_TRUE@	src/gui_jobwindow.lo src/gui_mainwindow.lo \
@HAVE_FLTK_TRUE@	src/manualpicker.lo
am_librelion_@RELION_API_VERSION@_la_OBJECTS = src/args.lo \
	src/assembly.lo src/autopicker.lo src/backprojector.lo \
	src/complex.lo src/ctf.lo src/ctffind_runner.lo src/error.lo \
	src/euler.lo src/exp_model.lo src/fftw.lo src/filename.lo \
	src/funcs.lo src/healpix_sampling.lo src/image.lo src/mask.lo \
	src/matrix1d.lo src/matrix2d.lo src/memory.lo \
	src/metadata_container.lo src/metadata_label.lo \
	src/metadata_table.lo src/ml_model.lo src/ml_optimiser.lo \
	src/multidim_array.lo src/numerical_recipes.lo src/parallel.lo \
	src/particle_polisher.lo src/particle_sorter.lo \
	src/postprocessing.lo src/preprocessing.lo src/projector.lo \
	src/strings.lo src/symmetries.lo src/tabfuncs.lo src/time.lo \
	src/transformations.lo src/Healpix_2.15a/cxxutils.lo \
	src/Healpix_2.15a/healpix_base.lo $(am__objects_1) \
	$(am__objects_2)
librelion_@RELION_API_VERSION@_la_OBJECTS =  \
	$(am_librelion_@RELION_API_VERSION@_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
librelion_@RELION_API_VERSION@_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(librelion_@RELION_API_VERSION@_la_LDFLAGS) $(LDFLAGS) -o $@
@HAVE_MPI_TRUE@am__EXEEXT_1 = refine_mpi$(EXEEXT) \
@HAVE_MPI_TRUE@	preprocess_mpi$(EXEEXT) autopick_mpi$(EXEEXT) \
@HAVE_MPI_TRUE@	particle_polish_mpi$(EXEEXT) \
@HAVE_MPI_TRUE@	particle_sort_mpi$(EXEEXT) \
@HAVE_MPI_TRUE@	run_ctffind_mpi$(EXEEXT)
@HAVE_FLTK_TRUE@am__EXEEXT_2 = manualpick$(EXEEXT) display$(EXEEXT) \
@HAVE_FLTK_TRUE@	maingui$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
am_autopick_OBJECTS = src/apps/autopick.$(OBJEXT)
autopick_OBJECTS = $(am_autopick_OBJECTS)
autopick_DEPENDENCIES = $(RelionLibs)
am_autopick_mpi_OBJECTS = src/apps/autopick_mpi.$(OBJEXT)
autopick_mpi_OBJECTS = $(am_autopick_mpi_OBJECTS)
autopick_mpi_DEPENDENCIES = $(RelionLibs)
am_display_OBJECTS = src/apps/display.$(OBJEXT)
display_OBJECTS = $(am_display_OBJECTS)
display_DEPENDENCIES = $(RelionLibs)
am_find_tiltpairs_OBJECTS = src/apps/find_tiltpairs.$(OBJEXT)
find_tiltpairs_OBJECTS = $(am_find_tiltpairs_OBJECTS)
find_tiltpairs_DEPENDENCIES = $(RelionLibs)
am_image_handler_OBJECTS = src/apps/image_handler.$(OBJEXT)
image_handler_OBJECTS = $(am_image_handler_OBJECTS)
image_handler_DEPENDENCIES = $(RelionLibs)
am_maingui_OBJECTS = src/apps/maingui.$(OBJEXT)
maingui_OBJECTS = $(am_maingui_OBJECTS)
maingui_DEPENDENCIES = $(RelionLibs)
am_manualpick_OBJECTS = src/apps/manualpick.$(OBJEXT)
manualpick_OBJECTS = $(am_manualpick_OBJECTS)
manualpick_DEPENDENCIES = $(RelionLibs)
am_mask_create_OBJECTS = src/apps/mask_create.$(OBJEXT)
mask_create_OBJECTS = $(am_mask_create_OBJECTS)
mask_create_DEPENDENCIES = $(RelionLibs)
am_particle_polish_OBJECTS = src/apps/particle_polish.$(OBJEXT)
particle_polish_OBJECTS = $(am_particle_polish_OBJECTS)
particle_polish_DEPENDENCIES = $(RelionLibs)
am_particle_polish_mpi_OBJECTS =  \
	src/apps/particle_polish_mpi.$(OBJEXT)
particle_polish_mpi_OBJECTS = $(am_particle_polish_mpi_OBJECTS)
particle_polish_mpi_DEPENDENCIES = $(RelionLibs)
am_particle_sort_OBJECTS = src/apps/particle_sort.$(OBJEXT)
particle_sort_OBJECTS = $(am_particle_sort_OBJECTS)
particle_sort_DEPENDENCIES = $(RelionLibs)
am_particle_sort_mpi_OBJECTS = src/apps/particle_sort_mpi.$(OBJEXT)
particle_sort_mpi_OBJECTS = $(am_particle_sort_mpi_OBJECTS)
particle_sort_mpi_DEPENDENCIES = $(RelionLibs)
am_postprocess_OBJECTS = src/apps/postprocess.$(OBJEXT)
postprocess_OBJECTS = $(am_postprocess_OBJECTS)
postprocess_DEPENDENCIES = $(RelionLibs)
am_preprocess_OBJECTS = src/apps/preprocess.$(OBJEXT)
preprocess_OBJECTS = $(am_preprocess_OBJECTS)
preprocess_DEPENDENCIES = $(RelionLibs)
am_preprocess_mpi_OBJECTS = src/apps/preprocess_mpi.$(OBJEXT)
preprocess_mpi_OBJECTS = $(am_preprocess_mpi_OBJECTS)
preprocess_mpi_DEPENDENCIES = $(RelionLibs)
am_project_OBJECTS = src/apps/project.$(OBJEXT)
project_OBJECTS = $(am_project_OBJECTS)
project_DEPENDENCIES = $(RelionLibs)
am_reconstruct_OBJECTS = src/apps/reconstruct.$(OBJEXT)
reconstruct_OBJECTS = $(am_reconstruct_OBJECTS)
reconstruct_DEPENDENCIES = $(RelionLibs)
am_refine_OBJECTS = src/apps/refine.$(OBJEXT)
refine_OBJECTS = $(am_refine_OBJECTS)
refine_DEPENDENCIES = $(RelionLibs)
am_refine_mpi_OBJECTS = src/apps/refine_mpi.$(OBJEXT)
refine_mpi_OBJECTS = $(am_refine_mpi_OBJECTS)
refine_mpi_DEPENDENCIES = $(RelionLibs)
am_run_ctffind_OBJECTS = src/apps/run_ctffind.$(OBJEXT)
run_ctffind_OBJECTS = $(am_run_ctffind_OBJECTS)
run_ctffind_DEPENDENCIES = $(RelionLibs)
am_run_ctffind_mpi_OBJECTS = src/apps/run_ctffind_mpi.$(OBJEXT)
run_ctffind_mpi_OBJECTS = $(am_run_ctffind_mpi_OBJECTS)
run_ctffind_mpi_DEPENDENCIES = $(RelionLibs)
am_stack_create_OBJECTS = src/apps/stack_create.$(OBJEXT)
stack_create_OBJECTS = $(am_stack_create_OBJECTS)
stack_create_DEPENDENCIES = $(RelionLibs)
SCRIPTS = $(dist_bin_SCRIPTS) $(dist_noinst_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(librelion_@RELION_API_VERSION@_la_SOURCES) \
	$(autopick_SOURCES) $(autopick_mpi_SOURCES) $(display_SOURCES) \
	$(find_tiltpairs_SOURCES) $(image_handler_SOURCES) \
	$(maingui_SOURCES) $(manualpick_SOURCES) \
	$(mask_create_SOURCES) $(particle_polish_SOURCES) \
	$(particle_polish_mpi_SOURCES) $(particle_sort_SOURCES) \
	$(particle_sort_mpi_SOURCES) $(postprocess_SOURCES) \
	$(preprocess_SOURCES) $(preprocess_mpi_SOURCES) \
	$(project_SOURCES) $(reconstruct_SOURCES) $(refine_SOURCES) \
	$(refine_mpi_SOURCES) $(run_ctffind_SOURCES) \
	$(run_ctffind_mpi_SOURCES) $(stack_create_SOURCES)
DIST_SOURCES = $(am__librelion_@RELION_API_VERSION@_la_SOURCES_DIST) \
	$(autopick_SOURCES) $(autopick_mpi_SOURCES) $(display_SOURCES) \
	$(find_tiltpairs_SOURCES) $(image_handler_SOURCES) \
	$(maingui_SOURCES) $(manualpick_SOURCES) \
	$(mask_create_SOURCES) $(particle_polish_SOURCES) \
	$(particle_polish_mpi_SOURCES) $(particle_sort_SOURCES) \
	$(particle_sort_mpi_SOURCES) $(postprocess_SOURCES) \
	$(preprocess_SOURCES) $(preprocess_mpi_SOURCES) \
	$(project_SOURCES) $(reconstruct_SOURCES) $(refine_SOURCES) \
	$(refine_mpi_SOURCES) $(run_ctffind_SOURCES) \
	$(run_ctffind_mpi_SOURCES) $(stack_create_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(pkgconfig_DATA)
am__nobase_relion_include_HEADERS_DIST = relion.h src/args.h \
	src/assembly.h src/autopicker.h src/backprojector.h \
	src/complex.h src/ctf.h src/ctffind_runner.h src/displayer.h \
	src/error.h src/euler.h src/exp_model.h src/fftw.h \
	src/filename.h src/funcs.h src/gcc_version.h src/gui_entries.h \
	src/gui_jobwindow.h src/gui_mainwindow.h \
	src/healpix_sampling.h src/image.h src/macros.h src/mask.h \
	src/matrix1d.h src/matrix2d.h src/memory.h \
	src/metadata_container.h src/metadata_label.h \
	src/metadata_table.h src/ml_model.h src/ml_optimiser.h \
	src/multidim_array.h src/numerical_recipes.h src/parallel.h \
	src/particle_polisher.h src/particle_sorter.h \
	src/postprocessing.h src/preprocessing.h src/projector.h \
	src/rwIMAGIC.h src/rwMRC.h src/rwSPIDER.h src/strings.h \
	src/symmetries.h src/tabfuncs.h src/time.h \
	src/transformations.h src/Healpix_2.15a/arr.h \
	src/Healpix_2.15a/cxxutils.h src/Healpix_2.15a/datatypes.h \
	src/Healpix_2.15a/geom_utils.h src/Healpix_2.15a/lsconstants.h \
	src/Healpix_2.15a/message_error.h \
	src/Healpix_2.15a/openmp_support.h \
	src/Healpix_2.15a/pointing.h src/Healpix_2.15a/vec3.h \
	src/Healpix_2.15a/healpix_base.h src/mpi.h \
	src/autopicker_mpi.h src/ctffind_runner_mpi.h \
	src/particle_polisher_mpi.h src/particle_sorter_mpi.h \
	src/preprocessing_mpi.h src/ml_optimiser_mpi.h \
	src/manualpicker.h
HEADERS = $(nobase_relion_include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MPICXX = @MPICXX@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
RELION_API_VERSION = @RELION_API_VERSION@
RELION_SO_VERSION = @RELION_SO_VERSION@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = subdir-objects
ACLOCAL_AMFLAGS = ${ACLOCAL_FLAGS}
dist_noinst_SCRIPTS = autogen.sh

# Install my_script in $(bindir) and distribute it.
dist_bin_SCRIPTS = \
scripts/star_datablock_ctfdat \
scripts/star_datablock_stack \
scripts/star_datablock_singlefiles \
scripts/star_loopheader \
scripts/star_plottable \
scripts/star_printtable \
scripts/qsub.csh


### Include tar.gz of FFTW and FLTK in distribution, as well as all source files for the GUI
EXTRA_DIST = INSTALL.sh \
external/fftw-3.2.2.tar.gz \
external/fltk-1.3.0.tar.gz 


###############################################################################
#
# Core library
#
###############################################################################
lib_LTLIBRARIES = librelion-@RELION_API_VERSION@.la
librelion_@RELION_API_VERSION@_la_SOURCES = src/args.cpp \
	src/assembly.cpp src/autopicker.cpp src/backprojector.cpp \
	src/complex.cpp src/ctf.cpp src/ctffind_runner.cpp \
	src/error.cpp src/euler.cpp src/exp_model.cpp src/fftw.cpp \
	src/filename.cpp src/funcs.cpp src/healpix_sampling.cpp \
	src/image.cpp src/mask.cpp src/matrix1d.cpp src/matrix2d.cpp \
	src/memory.cpp src/metadata_container.cpp \
	src/metadata_label.cpp src/metadata_table.cpp src/ml_model.cpp \
	src/ml_optimiser.cpp src/multidim_array.cpp \
	src/numerical_recipes.cpp src/parallel.cpp \
	src/particle_polisher.cpp src/particle_sorter.cpp \
	src/postprocessing.cpp src/preprocessing.cpp src/projector.cpp \
	src/strings.cpp src/symmetries.cpp src/tabfuncs.cpp \
	src/time.cpp src/transformations.cpp \
	src/Healpix_2.15a/cxxutils.cc \
	src/Healpix_2.15a/healpix_base.cc $(am__append_1) \
	$(am__append_3)
relion_includedir = $(includedir)/relion-$(RELION_API_VERSION)
nobase_relion_include_HEADERS = relion.h src/args.h src/assembly.h \
	src/autopicker.h src/backprojector.h src/complex.h src/ctf.h \
	src/ctffind_runner.h src/displayer.h src/error.h src/euler.h \
	src/exp_model.h src/fftw.h src/filename.h src/funcs.h \
	src/gcc_version.h src/gui_entries.h src/gui_jobwindow.h \
	src/gui_mainwindow.h src/healpix_sampling.h src/image.h \
	src/macros.h src/mask.h src/matrix1d.h src/matrix2d.h \
	src/memory.h src/metadata_container.h src/metadata_label.h \
	src/metadata_table.h src/ml_model.h src/ml_optimiser.h \
	src/multidim_array.h src/numerical_recipes.h src/parallel.h \
	src/particle_polisher.h src/particle_sorter.h \
	src/postprocessing.h src/preprocessing.h src/projector.h \
	src/rwIMAGIC.h src/rwMRC.h src/rwSPIDER.h src/strings.h \
	src/symmetries.h src/tabfuncs.h src/time.h \
	src/transformations.h src/Healpix_2.15a/arr.h \
	src/Healpix_2.15a/cxxutils.h src/Healpix_2.15a/datatypes.h \
	src/Healpix_2.15a/geom_utils.h src/Healpix_2.15a/lsconstants.h \
	src/Healpix_2.15a/message_error.h \
	src/Healpix_2.15a/openmp_support.h \
	src/Healpix_2.15a/pointing.h src/Healpix_2.15a/vec3.h \
	src/Healpix_2.15a/healpix_base.h $(am__append_2) \
	$(am__append_4)
librelion_@RELION_API_VERSION@_la_LDFLAGS = -version-info $(RELION_SO_VERSION) $(FFT_LIBS)
relion_libincludedir = $(libdir)/relion-$(RELION_API_VERSION)/include
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = relion-$(RELION_API_VERSION).pc
RelionLibs = librelion-$(RELION_API_VERSION).la 
refine_SOURCES = src/apps/refine.cpp
refine_LDADD = $(RelionLibs) 
refine_mpi_SOURCES = src/apps/refine_mpi.cpp
refine_mpi_LDADD = $(RelionLibs)
reconstruct_SOURCES = src/apps/reconstruct.cpp
reconstruct_LDADD = $(RelionLibs)
project_SOURCES = src/apps/project.cpp
project_LDADD = $(RelionLibs)
postprocess_SOURCES = src/apps/postprocess.cpp
postprocess_LDADD = $(RelionLibs)
preprocess_SOURCES = src/apps/preprocess.cpp
preprocess_LDADD = $(RelionLibs)
preprocess_mpi_SOURCES = src/apps/preprocess_mpi.cpp
preprocess_mpi_LDADD = $(RelionLibs)
autopick_SOURCES = src/apps/autopick.cpp
autopick_LDADD = $(RelionLibs)
autopick_mpi_SOURCES = src/apps/autopick_mpi.cpp
autopick_mpi_LDADD = $(RelionLibs)
manualpick_SOURCES = src/apps/manualpick.cpp
manualpick_LDADD = $(RelionLibs)
particle_polish_SOURCES = src/apps/particle_polish.cpp
particle_polish_LDADD = $(RelionLibs)
particle_polish_mpi_SOURCES = src/apps/particle_polish_mpi.cpp
particle_polish_mpi_LDADD = $(RelionLibs)
particle_sort_SOURCES = src/apps/particle_sort.cpp
particle_sort_LDADD = $(RelionLibs)
particle_sort_mpi_SOURCES = src/apps/particle_sort_mpi.cpp
particle_sort_mpi_LDADD = $(RelionLibs)
run_ctffind_SOURCES = src/apps/run_ctffind.cpp
run_ctffind_LDADD = $(RelionLibs)
run_ctffind_mpi_SOURCES = src/apps/run_ctffind_mpi.cpp
run_ctffind_mpi_LDADD = $(RelionLibs)
display_SOURCES = src/apps/display.cpp
display_LDADD = $(RelionLibs)
maingui_SOURCES = src/apps/maingui.cpp
maingui_LDADD = $(RelionLibs)
mask_create_SOURCES = src/apps/mask_create.cpp
mask_create_LDADD = $(RelionLibs)
stack_create_SOURCES = src/apps/stack_create.cpp
stack_create_LDADD = $(RelionLibs)
image_handler_SOURCES = src/apps/image_handler.cpp
image_handler_LDADD = $(RelionLibs)
find_tiltpairs_SOURCES = src/apps/find_tiltpairs.cpp
find_tiltpairs_LDADD = $(RelionLibs)
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .cpp .lo .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
relion-${RELION_API_VERSION}.pc: $(top_builddir)/config.status $(srcdir)/relion.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/args.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/assembly.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/autopicker.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/backprojector.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/complex.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/ctf.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/ctffind_runner.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/error.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/euler.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/exp_model.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/fftw.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/filename.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/funcs.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/healpix_sampling.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/image.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/mask.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/matrix1d.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/matrix2d.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/memory.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/metadata_container.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/metadata_label.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/metadata_table.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ml_model.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/ml_optimiser.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/multidim_array.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/numerical_recipes.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/parallel.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/particle_polisher.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/particle_sorter.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/postprocessing.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/preprocessing.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/projector.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/strings.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/symmetries.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/tabfuncs.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/time.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/transformations.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/Healpix_2.15a/$(am__dirstamp):
	@$(MKDIR_P) src/Healpix_2.15a
	@: > src/Healpix_2.15a/$(am__dirstamp)
src/Healpix_2.15a/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/Healpix_2.15a/$(DEPDIR)
	@: > src/Healpix_2.15a/$(DEPDIR)/$(am__dirstamp)
src/Healpix_2.15a/cxxutils.lo: src/Healpix_2.15a/$(am__dirstamp) \
	src/Healpix_2.15a/$(DEPDIR)/$(am__dirstamp)
src/Healpix_2.15a/healpix_base.lo: src/Healpix_2.15a/$(am__dirstamp) \
	src/Healpix_2.15a/$(DEPDIR)/$(am__dirstamp)
src/mpi.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/autopicker_mpi.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ctffind_runner_mpi.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/particle_polisher_mpi.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/particle_sorter_mpi.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/preprocessing_mpi.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ml_optimiser_mpi.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/displayer.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/gui_entries.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/gui_jobwindow.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/gui_mainwindow.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/manualpicker.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)

librelion-@RELION_API_VERSION@.la: $(librelion_@RELION_API_VERSION@_la_OBJECTS) $(librelion_@RELION_API_VERSION@_la_DEPENDENCIES) $(EXTRA_librelion_@RELION_API_VERSION@_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(librelion_@RELION_API_VERSION@_la_LINK) -rpath $(libdir) $(librelion_@RELION_API_VERSION@_la_OBJECTS) $(librelion_@RELION_API_VERSION@_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
src/apps/$(am__dirstamp):
	@$(MKDIR_P) src/apps
	@: > src/apps/$(am__dirstamp)
src/apps/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/apps/$(DEPDIR)
	@: > src/apps/$(DEPDIR)/$(am__dirstamp)
src/apps/autopick.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

autopick$(EXEEXT): $(autopick_OBJECTS) $(autopick_DEPENDENCIES) $(EXTRA_autopick_DEPENDENCIES) 
	@rm -f autopick$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(autopick_OBJECTS) $(autopick_LDADD) $(LIBS)
src/apps/autopick_mpi.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

autopick_mpi$(EXEEXT): $(autopick_mpi_OBJECTS) $(autopick_mpi_DEPENDENCIES) $(EXTRA_autopick_mpi_DEPENDENCIES) 
	@rm -f autopick_mpi$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(autopick_mpi_OBJECTS) $(autopick_mpi_LDADD) $(LIBS)
src/apps/display.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

display$(EXEEXT): $(display_OBJECTS) $(display_DEPENDENCIES) $(EXTRA_display_DEPENDENCIES) 
	@rm -f display$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(display_OBJECTS) $(display_LDADD) $(LIBS)
src/apps/find_tiltpairs.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

find_tiltpairs$(EXEEXT): $(find_tiltpairs_OBJECTS) $(find_tiltpairs_DEPENDENCIES) $(EXTRA_find_tiltpairs_DEPENDENCIES) 
	@rm -f find_tiltpairs$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(find_tiltpairs_OBJECTS) $(find_tiltpairs_LDADD) $(LIBS)
src/apps/image_handler.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

image_handler$(EXEEXT): $(image_handler_OBJECTS) $(image_handler_DEPENDENCIES) $(EXTRA_image_handler_DEPENDENCIES) 
	@rm -f image_handler$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(image_handler_OBJECTS) $(image_handler_LDADD) $(LIBS)
src/apps/maingui.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

maingui$(EXEEXT): $(maingui_OBJECTS) $(maingui_DEPENDENCIES) $(EXTRA_maingui_DEPENDENCIES) 
	@rm -f maingui$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(maingui_OBJECTS) $(maingui_LDADD) $(LIBS)
src/apps/manualpick.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

manualpick$(EXEEXT): $(manualpick_OBJECTS) $(manualpick_DEPENDENCIES) $(EXTRA_manualpick_DEPENDENCIES) 
	@rm -f manualpick$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(manualpick_OBJECTS) $(manualpick_LDADD) $(LIBS)
src/apps/mask_create.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

mask_create$(EXEEXT): $(mask_create_OBJECTS) $(mask_create_DEPENDENCIES) $(EXTRA_mask_create_DEPENDENCIES) 
	@rm -f mask_create$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(mask_create_OBJECTS) $(mask_create_LDADD) $(LIBS)
src/apps/particle_polish.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

particle_polish$(EXEEXT): $(particle_polish_OBJECTS) $(particle_polish_DEPENDENCIES) $(EXTRA_particle_polish_DEPENDENCIES) 
	@rm -f particle_polish$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(particle_polish_OBJECTS) $(particle_polish_LDADD) $(LIBS)
src/apps/particle_polish_mpi.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

particle_polish_mpi$(EXEEXT): $(particle_polish_mpi_OBJECTS) $(particle_polish_mpi_DEPENDENCIES) $(EXTRA_particle_polish_mpi_DEPENDENCIES) 
	@rm -f particle_polish_mpi$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(particle_polish_mpi_OBJECTS) $(particle_polish_mpi_LDADD) $(LIBS)
src/apps/particle_sort.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

particle_sort$(EXEEXT): $(particle_sort_OBJECTS) $(particle_sort_DEPENDENCIES) $(EXTRA_particle_sort_DEPENDENCIES) 
	@rm -f particle_sort$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(particle_sort_OBJECTS) $(particle_sort_LDADD) $(LIBS)
src/apps/particle_sort_mpi.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

particle_sort_mpi$(EXEEXT): $(particle_sort_mpi_OBJECTS) $(particle_sort_mpi_DEPENDENCIES) $(EXTRA_particle_sort_mpi_DEPENDENCIES) 
	@rm -f particle_sort_mpi$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(particle_sort_mpi_OBJECTS) $(particle_sort_mpi_LDADD) $(LIBS)
src/apps/postprocess.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

postprocess$(EXEEXT): $(postprocess_OBJECTS) $(postprocess_DEPENDENCIES) $(EXTRA_postprocess_DEPENDENCIES) 
	@rm -f postprocess$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(postprocess_OBJECTS) $(postprocess_LDADD) $(LIBS)
src/apps/preprocess.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

preprocess$(EXEEXT): $(preprocess_OBJECTS) $(preprocess_DEPENDENCIES) $(EXTRA_preprocess_DEPENDENCIES) 
	@rm -f preprocess$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(preprocess_OBJECTS) $(preprocess_LDADD) $(LIBS)
src/apps/preprocess_mpi.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

preprocess_mpi$(EXEEXT): $(preprocess_mpi_OBJECTS) $(preprocess_mpi_DEPENDENCIES) $(EXTRA_preprocess_mpi_DEPENDENCIES) 
	@rm -f preprocess_mpi$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(preprocess_mpi_OBJECTS) $(preprocess_mpi_LDADD) $(LIBS)
src/apps/project.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

project$(EXEEXT): $(project_OBJECTS) $(project_DEPENDENCIES) $(EXTRA_project_DEPENDENCIES) 
	@rm -f project$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(project_OBJECTS) $(project_LDADD) $(LIBS)
src/apps/reconstruct.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

reconstruct$(EXEEXT): $(reconstruct_OBJECTS) $(reconstruct_DEPENDENCIES) $(EXTRA_reconstruct_DEPENDENCIES) 
	@rm -f reconstruct$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(reconstruct_OBJECTS) $(reconstruct_LDADD) $(LIBS)
src/apps/refine.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

refine$(EXEEXT): $(refine_OBJECTS) $(refine_DEPENDENCIES) $(EXTRA_refine_DEPENDENCIES) 
	@rm -f refine$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(refine_OBJECTS) $(refine_LDADD) $(LIBS)
src/apps/refine_mpi.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

refine_mpi$(EXEEXT): $(refine_mpi_OBJECTS) $(refine_mpi_DEPENDENCIES) $(EXTRA_refine_mpi_DEPENDENCIES) 
	@rm -f refine_mpi$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(refine_mpi_OBJECTS) $(refine_mpi_LDADD) $(LIBS)
src/apps/run_ctffind.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

run_ctffind$(EXEEXT): $(run_ctffind_OBJECTS) $(run_ctffind_DEPENDENCIES) $(EXTRA_run_ctffind_DEPENDENCIES) 
	@rm -f run_ctffind$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(run_ctffind_OBJECTS) $(run_ctffind_LDADD) $(LIBS)
src/apps/run_ctffind_mpi.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

run_ctffind_mpi$(EXEEXT): $(run_ctffind_mpi_OBJECTS) $(run_ctffind_mpi_DEPENDENCIES) $(EXTRA_run_ctffind_mpi_DEPENDENCIES) 
	@rm -f run_ctffind_mpi$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(run_ctffind_mpi_OBJECTS) $(run_ctffind_mpi_LDADD) $(LIBS)
src/apps/stack_create.$(OBJEXT): src/apps/$(am__dirstamp) \
	src/apps/$(DEPDIR)/$(am__dirstamp)

stack_create$(EXEEXT): $(stack_create_OBJECTS) $(stack_create_DEPENDENCIES) $(EXTRA_stack_create_DEPENDENCIES) 
	@rm -f stack_create$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(stack_create_OBJECTS) $(stack_create_LDADD) $(LIBS)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/*.$(OBJEXT)
	-rm -f src/*.lo
	-rm -f src/Healpix_2.15a/*.$(OBJEXT)
	-rm -f src/Healpix_2.15a/*.lo
	-rm -f src/apps/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/args.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/assembly.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/autopicker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/autopicker_mpi.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/backprojector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/complex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ctf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ctffind_runner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ctffind_runner_mpi.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/displayer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/euler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/exp_model.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/fftw.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/filename.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/funcs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/gui_entries.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/gui_jobwindow.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/gui_mainwindow.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/healpix_sampling.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/image.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/manualpicker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/mask.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/matrix1d.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/matrix2d.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/memory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/metadata_container.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/metadata_label.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/metadata_table.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ml_model.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ml_optimiser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ml_optimiser_mpi.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/mpi.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/multidim_array.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/numerical_recipes.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/parallel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/particle_polisher.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/particle_polisher_mpi.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/particle_sorter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/particle_sorter_mpi.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/postprocessing.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/preprocessing.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/preprocessing_mpi.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/projector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/strings.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/symmetries.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/tabfuncs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/time.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/transformations.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/Healpix_2.15a/$(DEPDIR)/cxxutils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/Healpix_2.15a/$(DEPDIR)/healpix_base.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/autopick.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/autopick_mpi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/display.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/find_tiltpairs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/image_handler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/maingui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/manualpick.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/mask_create.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/particle_polish.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/particle_polish_mpi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/particle_sort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/particle_sort_mpi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/postprocess.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/preprocess.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/preprocess_mpi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/project.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/reconstruct.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/refine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/refine_mpi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/run_ctffind.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/run_ctffind_mpi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/apps/$(DEPDIR)/stack_create.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf src/.libs src/_libs
	-rm -rf src/Healpix_2.15a/.libs src/Healpix_2.15a/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-nobase_relion_includeHEADERS: $(nobase_relion_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_relion_include_HEADERS)'; test -n "$(relion_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(relion_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(relion_includedir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(relion_includedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(relion_includedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(relion_includedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(relion_includedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_relion_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_relion_include_HEADERS)'; test -n "$(relion_includedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(relion_includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA) \
		$(HEADERS) config.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(relion_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)
	-rm -f src/Healpix_2.15a/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/Healpix_2.15a/$(am__dirstamp)
	-rm -f src/apps/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/apps/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf src/$(DEPDIR) src/Healpix_2.15a/$(DEPDIR) src/apps/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nobase_relion_includeHEADERS \
	install-pkgconfigDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS \
	install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf src/$(DEPDIR) src/Healpix_2.15a/$(DEPDIR) src/apps/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-libLTLIBRARIES \
	uninstall-nobase_relion_includeHEADERS uninstall-pkgconfigDATA

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-cscope clean-generic \
	clean-libLTLIBRARIES clean-libtool cscope cscopelist-am ctags \
	ctags-am dist dist-all dist-bzip2 dist-gzip dist-lzip \
	dist-shar dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dist_binSCRIPTS install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man \
	install-nobase_relion_includeHEADERS install-pdf \
	install-pdf-am install-pkgconfigDATA install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-libLTLIBRARIES \
	uninstall-nobase_relion_includeHEADERS uninstall-pkgconfigDATA


#bin_PROGRAMS += denovo_model
#denovo_model_SOURCES = src/apps/denovo_model.cpp
#denovo_model_LDADD = $(RelionLibs)

#bin_PROGRAMS += tester
#tester_SOURCES = src/apps/tester.cpp
#tester_LDADD = $(RelionLibs)

#bin_PROGRAMS += fsc2bfac 
#fsc2bfac_SOURCES = src/apps/fsc2bfac.cpp
#fsc2bfac_LDADD = $(RelionLibs)

#bin_PROGRAMS += convert_bild2map
#convert_bild2map_SOURCES = src/apps/convert_bild2map.cpp
#convert_bild2map_LDADD = $(RelionLibs)

#bin_PROGRAMS += composite_map
#composite_map_SOURCES = src/apps/composite_map.cpp
#composite_map_LDADD = $(RelionLibs)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
